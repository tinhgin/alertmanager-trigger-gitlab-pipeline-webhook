kind: Deployment
apiVersion: apps/v1
metadata:
  name: alertmanager-trigger-gitlab-pipeline-webhook
  #namespace: devops
  labels:
    app: alertmanager-trigger-gitlab-pipeline-webhook
spec:
  replicas: 2
  selector:
    matchLabels:
      app: alertmanager-trigger-gitlab-pipeline-webhook
  template:
    metadata:
      labels:
        app: alertmanager-trigger-gitlab-pipeline-webhook
    spec:
      containers:
        - name: alertmanager-trigger-gitlab-pipeline-webhook
          image: tinhgin/alertmanager-trigger-gitlab-pipeline-webhook
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          resources:
            limits:
              cpu: '100m'
              memory: "128Mi"
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - alertmanager-trigger-gitlab-pipeline-webhook
              topologyKey: kubernetes.io/hostname
          #requiredDuringSchedulingIgnoredDuringExecution:
          #  - labelSelector:
          #      matchExpressions:
          #        - key: app
          #          operator: In
          #          values:
          #            - alertmanager-trigger-gitlab-pipeline-webhook
          #    topologyKey: kubernetes.io/hostname
        #nodeAffinity:
        #  requiredDuringSchedulingIgnoredDuringExecution:
        #    nodeSelectorTerms:
        #    - matchExpressions:
        #      - key: type
        #        operator: In
        #        values:
        #        - spot
        #      - key: group
        #        operator: In
        #        values:
        #        - dbgroup2
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600